# Vim snippets for Drupal 7

## Pathogen install:

Clone the repo in to the ~/.vim/bundle directory.

```bash
$ cd ~/.vim/bundle
$ git clone git://github.com/technosophos/drupal-snippets.git
```

## Vundle install:

Add the following to .vimrc:
```
Bundle 'sanguis/drupal-snippets'
```
Then run `:BundleInstall`

## USAGE

This package providers hundreds of Drupal snippets.

### Starters

To start a new `*.module` file, open the empty file and type `newmod`.
This will create the necessary module structure.

Similarly, other files can be scaffolded:

- `newinc`: Start a new inc file.
- `newinstall`: Scaffold an install file
- `newinfo`: Start a new info file (only works if the extension is
  `.info`).


### Hooks:

All core Drupal 7 hook are provided in this package.

 - Type `hook_HOOKNAME*<tab>*` for annotated snippets. These often contain
   additional data structures (like menu items).
 - Type `h_HOOKNAME*<tab>*` for the non-annotated versions.
 - `hook` with no name will stub a generic hook callback.

### FAPI and Other Structures

- `fi` and `fapi` generate basic form items.
- For FAPI field types, type fapi_FIELDTYPE*<tab>*. Example:
   `fapi_textarea` expands to a full text area definition.
- `mi` and `menu_item` expand to menu item arrays.
- `blocki` and `block_item` expand to block items

### Utilities:

- `t`, `tt`, and `ttt` expand to form various flavors of `t()`. (Note
  that `t` may be overridden by the PHP snipmate-snippets file).
- `link` expands to an `l()` function.
- `watchd` and `watchedog [ERROR|NOTICE|WARNING]` expand to various
  expansions of `watchdog()`.
- `dsm` expands to `drupal_set_message()`.
- `ddump`, `jdump`, and `jlog` provide methods of dumping variables.
- `d.o` expands to `http://drupal.org`.

## Documentation

Basic documentation is present in the `doc/` folder.
